#!/usr/bin/env python
# -*- coding: utf-8 -*-

import json
import re

d = \
{
    "a": {
        "b": {
            "c": {
                "d": "v1",
                "key": "v2" # line 6
                }
            },
        "x": {
            "c": {
                "d": "v11",
                "key": "v20" # line 12
                }
            },
        "c": {
            "g": "v3",
            "key": "v4" # line 17
            },
        "key": "v5" # line 19
    }
}

def find_linenumber(l, t):

    def findkey(l, t, lev=0, ind=0):
        if ind == len(t):
            return 1
        else:
            el = l[0]
            try:
                if el.startswith('"' + t[ind]) and t.index(t[ind]) == lev:
                    ind += 1
            except IndexError as e:
                pass

            if "{" in el:
                lev += 1
            if "}" in el:
                lev -= 1
            return 1 + findkey(l[1:], t, lev, ind)

    return findkey(l[1:], t)

def create_dict(ds):
    l = ds.split('\n')
    return [x.lstrip() for x in l]


if __name__ == "__main__":
    ds = json.dumps(d, indent=4)

    ll = create_dict(ds)
    tup = ('a', 'key')
    print("Found a -> key on line {}".format(findkey(ll[1:], tup)))

    tup = ('a', 'x', 'c', 'key')
    print("Found a -> x -> c -> key on line {}".format(findkey(ll[1:], tup)))

    tup = ('a', 'c', 'key')
    print("Found a -> c -> key on line {}".format(findkey(ll[1:], tup)))

    idx = findkey(ll[1:], tup) - 1
    s = re.compile(tup[-1] + ': (\s*(\[[^}]*?\]|".*?"|\d+\.*\d*))', re.DOTALL)
    match = s.search(l[idx])

    print(str(tup))
    print("Value found at start index: {}, stop index: {}".format(match.start(1), match.end(2)))

